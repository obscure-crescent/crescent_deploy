apiVersion: v1
kind: Pod
metadata:
  name: postgres
spec:
  restartPolicy: Always
  initContainers:
    - name: fix-perms
      image: busybox:latest
      command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data"]
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      securityContext:
        runAsUser: 0
  containers:
    - name: postgres
      image: postgres:latest
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      ports:
        - containerPort: 5432
          hostPort: 5432
      env:
        - name: POSTGRES_DB
          value: "mare"
        - name: POSTGRES_USER
          value: "mare"
        - name: POSTGRES_PASSWORD
          value: "secretdevpassword"
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - mountPath: /var/run/postgresql
          name: postgres-socket
  volumes:
    - name: postgres-socket
      hostPath:
        path: /tmp/postgresql-sockets # this needs to be writable
        type: DirectoryOrCreate
    - name: postgres-data # this is a volumeclaim, so should persist
      persistentVolumeClaim:
        claimName: postgres-data
---
apiVersion: v1
kind: Pod
metadata:
  name: redis
spec:
  containers:
    - name: redis
      image: redis:latest
      command: ["sh", "-c", "rm -f /data/dump.rdb && redis-server --save \"\" --appendonly no --requirepass secretredispassword"]
      ports:
        - containerPort: 6379
          hostPort: 6379
      volumeMounts:
        - name: cache
          mountPath: /data
  volumes:
    - name: cache
      emptyDir: {}